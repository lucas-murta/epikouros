name: Release

on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write
  pages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Run tests
        run: npx nx run-many -t lint test build typecheck

      - name: Build packages
        run: npx nx run-many -t build --parallel=3

      - name: Build Storybook
        run: npx nx run ep-ds:build-storybook --output-dir=../../docs --skip-nx-cache

      - name: Upload site artifact (docs)
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: docs

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  # Deploy GitHub Pages ap√≥s concluir a release com sucesso
  deploy-pages:
    name: Deploy GitHub Pages
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.result == 'success' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: docs

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job para notificar sobre falhas
  notify-failure:
    name: Notify Failure
    runs-on: ubuntu-latest
    needs: release
    if: failure()
    steps:
      - name: Notify failure
        run: |
          echo "Release workflow failed. Please check the logs."
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
